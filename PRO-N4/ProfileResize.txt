Timer unit: 1e-07 s

Total time: 0.476154 s
File: D:\Coding\Current\prepoznava_pesca\System\CompressProfile.py
Function: prevzorci_sliko at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           def prevzorci_sliko(slika: np.ndarray, nova_visina: int, nova_sirina: int) -> np.ndarray:
     8                                               # Preveri, ali je slika barvna ali sivinska
     9         1         45.0     45.0      0.0      if len(slika.shape) == 3:
    10         1          4.0      4.0      0.0          barvna = True
    11                                               elif len(slika.shape) == 2:
    12                                                   barvna = False
    13                                           
    14                                               # Izračun razmerja med originalno in novo velikostjo slike
    15         1         12.0     12.0      0.0      razmerje_visina = nova_visina / slika.shape[0]
    16         1          5.0      5.0      0.0      razmerje_sirina = nova_sirina / slika.shape[1]
    17                                           
    18                                               # Filtriranje višjih frekvenc z uporabo Gaussovega filtra
    19         1          3.0      3.0      0.0      if barvna:
    20         1    1283528.0    1e+06     27.0          slika = scipy.ndimage.gaussian_filter(slika, sigma=[razmerje_visina, razmerje_sirina, 0])
    21                                               else:
    22                                                   slika = scipy.ndimage.gaussian_filter(slika, sigma=[razmerje_visina, razmerje_sirina])
    23                                           
    24                                               # Uporaba scipy.ndimage.zoom za prevzorčenje
    25         1          6.0      6.0      0.0      if barvna:
    26         1    3475296.0    3e+06     73.0          prevzorcena_slika = scipy.ndimage.zoom(slika, (razmerje_visina, razmerje_sirina, 1))
    27                                               else:
    28                                                   prevzorcena_slika = scipy.ndimage.zoom(slika, (razmerje_visina, razmerje_sirina))
    29                                           
    30                                               # Pretvarjanje podatkovnega tipa na isti tip kot vhodna slika
    31         1       2634.0   2634.0      0.1      prevzorcena_slika = prevzorcena_slika.astype(slika.dtype)
    32                                           
    33         1          6.0      6.0      0.0      return prevzorcena_slika

Timer unit: 1e-07 s

Total time: 2.47843 s
File: D:\Coding\Current\prepoznava_pesca\System\CompressProfile.py
Function: prevzorci_sliko at line 7

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     7                                           def prevzorci_sliko(slika: np.ndarray, nova_visina: int, nova_sirina: int) -> np.ndarray:
     8                                               # Preveri, ali je slika barvna ali sivinska
     9         1         21.0     21.0      0.0      if len(slika.shape) == 3:
    10         1          4.0      4.0      0.0          barvna = True
    11                                               elif len(slika.shape) == 2:
    12                                                   barvna = False
    13                                           
    14                                               # Izračun razmerja med originalno in novo velikostjo slike
    15         1         12.0     12.0      0.0      razmerje_visina = nova_visina / slika.shape[0]
    16         1          5.0      5.0      0.0      razmerje_sirina = nova_sirina / slika.shape[1]
    17                                           
    18                                               # Filtriranje višjih frekvenc z uporabo Gaussovega filtra
    19         1          2.0      2.0      0.0      if barvna:
    20         1     241645.0 241645.0      1.0          slika = scipy.ndimage.gaussian_filter(slika, sigma=[razmerje_visina, razmerje_sirina, 0])
    21                                               else:
    22                                                   slika = scipy.ndimage.gaussian_filter(slika, sigma=[razmerje_visina, razmerje_sirina])
    23                                           
    24                                               # Uporaba scipy.ndimage.zoom za prevzorčenje
    25         1          4.0      4.0      0.0      if barvna:
    26         1   24525131.0    2e+07     99.0          prevzorcena_slika = scipy.ndimage.zoom(slika, (razmerje_visina, razmerje_sirina, 1))
    27                                               else:
    28                                                   prevzorcena_slika = scipy.ndimage.zoom(slika, (razmerje_visina, razmerje_sirina))
    29                                           
    30                                               # Pretvarjanje podatkovnega tipa na isti tip kot vhodna slika
    31         1      17441.0  17441.0      0.1      prevzorcena_slika = prevzorcena_slika.astype(slika.dtype)
    32                                           
    33         1          8.0      8.0      0.0      return prevzorcena_slika