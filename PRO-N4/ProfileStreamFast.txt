Timer unit: 1e-07 s

Total time: 9.49888 s
File: D:\Coding\Current\prepoznava_pesca\System\Detection\MUL_Stream.py
Function: Stream at line 128

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   128                                           def Stream(ExportQueue, lock, COMPRESS):
   129                                               # get parent paretn dir of this file
   130         1        736.0    736.0      0.0      parent_dir = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
   131                                           
   132                                               # get video path from video in folder Data, Testiranje
   133         1        245.0    245.0      0.0      video_path = os.path.join(parent_dir, "Data", "Testiranje", "sidewalk_twards.mp4")
   134                                               # video_path = os.path.join(parent_dir, "Data", "Predstavitev", "sidewalk_away_1.mp4")
   135                                           
   136         1          3.0      3.0      0.0      compr_time_array = []
   137                                           
   138                                               # video_path = None
   139                                           
   140         1          4.0      4.0      0.0      if video_path != None:
   141                                                   # Load video
   142         1     187250.0 187250.0      0.2          video = cv2.VideoCapture(video_path)
   143                                           
   144                                                   # Get video properties
   145         1        174.0    174.0      0.0          width = int(video.get(cv2.CAP_PROP_FRAME_WIDTH))
   146         1         14.0     14.0      0.0          height = int(video.get(cv2.CAP_PROP_FRAME_HEIGHT))
   147         1         20.0     20.0      0.0          fps = int(video.get(cv2.CAP_PROP_FPS))
   148                                           
   149                                               else:
   150                                                   video = cv2.VideoCapture(0, cv2.CAP_DSHOW)
   151                                           
   152                                                   video.set(cv2.CAP_PROP_FOURCC, cv2.VideoWriter.fourcc('m', 'j', 'p', 'g'))
   153                                                   video.set(cv2.CAP_PROP_FOURCC, cv2.VideoWriter.fourcc('M', 'J', 'P', 'G'))
   154                                           
   155                                                   width = 1920
   156                                                   height = 1080
   157                                                   fps = 30
   158                                           
   159                                                   video.set(cv2.CAP_PROP_FPS, fps)
   160                                                   video.set(cv2.CAP_PROP_FRAME_WIDTH, width)
   161                                                   video.set(cv2.CAP_PROP_FRAME_HEIGHT, height)
   162                                           
   163                                               # Initialize list for persisting bounding boxes
   164         1          8.0      8.0      0.0      frame_count = 0
   165         1          5.0      5.0      0.0      STOP = False
   166                                           
   167         1        110.0    110.0      0.0      fpsReader = FPS()
   168                                           
   169         1        158.0    158.0      0.0      b = np.frombuffer(ExportQueue, dtype=np.uint8)
   170                                           
   171         1          6.0      6.0      0.0      if not COMPRESS:
   172                                                   b = b.reshape((height, width, 3))
   173                                                   # b = b.reshape((width, height, 3))
   174                                               else:
   175         1         49.0     49.0      0.0          b = b.reshape((360, 640, 2))
   176                                           
   177         3         17.0      5.7      0.0      while not STOP:
   178       241       6444.0     26.7      0.0          while True:
   179       241       2103.0      8.7      0.0              try:
   180       241       8528.0     35.4      0.0                  start_time = time.time()
   181                                           
   182                                                           # Read frame
   183       241   10215558.0  42388.2     10.8                  ret, frame = video.read()
   184                                           
   185       241       2712.0     11.3      0.0                  if not ret:
   186         1          5.0      5.0      0.0                      break
   187                                           
   188       240     231959.0    966.5      0.2                  fpsReader.update(frame, pos=(50, 120), scale=5, thickness=5)
   189                                           
   190                                                           # frame = cv2.transpose(frame)
   191                                                           # frame = cv2.resize(frame, (width, height))
   192                                           
   193       240       5875.0     24.5      0.0                  if frame.shape[0] != height or frame.shape[1] != width:
   194                                                               frame = cv2.resize(frame, (width, height))
   195                                           
   196                                           
   197       240       2388.0      9.9      0.0                  compr_time_start = time.time()
   198                                                           # Compress frame
   199       240       1226.0      5.1      0.0                  if COMPRESS:
   200       240    5271141.0  21963.1      5.5                      frame_compr = Compression(frame, print_bits=False)
   201                                           
   202       240       4987.0     20.8      0.0                  compr_time_diff = time.time() - compr_time_start
   203       240       4041.0     16.8      0.0                  compr_time_array.append(compr_time_diff)
   204                                           
   205                                                           #frame_compr = Compression(frame, print_bits=False)
   206                                                           #frame = Decompression(frame_compr, print_bits=False)
   207                                           
   208       240       1784.0      7.4      0.0                  if lock is not None:
   209                                                               # Save frame to shared memory
   210       240       7584.0     31.6      0.0                      if lock.acquire(block=False):
   211       240       1143.0      4.8      0.0                          if not COMPRESS:
   212                                                                       b[:] = frame
   213                                                                   else:
   214       240     124873.0    520.3      0.1                              b[:] = frame_compr
   215       240       5257.0     21.9      0.0                          lock.release()
   216                                                           else:
   217                                                               if not COMPRESS:
   218                                                                   b[:] = frame
   219                                                               else:
   220                                                                   b[:] = frame_compr
   221                                           
   222                                           
   223       240    1408852.0   5870.2      1.5                  cv2.imshow('Video Producer', cv2.resize(frame, (640, 360)))
   224                                                           #cv2.imshow('Video Consumer', cv2.resize(frame, (1280, 720)))
   225                                                           # cv2.imshow('Video Producer', frame)
   226                                           
   227                                                           # Stop loop
   228       240   20488630.0  85369.3     21.6                  if cv2.waitKey(1) & 0xFF == ord('q'):
   229         1          7.0      7.0      0.0                      STOP = True
   230         1          4.0      4.0      0.0                      break
   231                                           
   232       239       5198.0     21.7      0.0                  frame_count += 1
   233                                           
   234       239       8463.0     35.4      0.0                  diff = time.time() - start_time
   235       239       4967.0     20.8      0.0                  if diff < (1 / fps):
   236                                                               #time.sleep(((1 / fps) - diff) * 0.9)
   237       237   56756799.0 239480.2     59.8                      time.sleep(((1 / fps) - diff) * 0.811)
   238                                                               # time.sleep(((1 / fps) - diff))
   239                                           
   240                                                       except KeyboardInterrupt:
   241                                                           STOP = True
   242                                                           break
   243                                           
   244         2      73810.0  36905.0      0.1          video.set(cv2.CAP_PROP_POS_FRAMES, 0)
   245         2         20.0     10.0      0.0          frame_count = 0
   246         2        369.0    184.5      0.0          print("[STREAMER] Restarting video...")
   247                                           
   248                                               # Release resources
   249         1      64201.0  64201.0      0.1      video.release()
   250         1      90782.0  90782.0      0.1      cv2.destroyAllWindows()
   251                                           
   252         1         34.0     34.0      0.0      if len(compr_time_array) > 0:
   253         1        268.0    268.0      0.0          print("Average compression time: ", sum(compr_time_array) / len(compr_time_array))