Timer unit: 1e-07 s

Total time: 10.814 s
File: D:\Coding\Current\prepoznava_pesca\System\Detection\MUL_Stream.py
Function: Stream at line 132

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   132                                           def Stream(ExportQueue, lock, COMPRESS):
   133                                               # get parent paretn dir of this file
   134         1        824.0    824.0      0.0      parent_dir = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
   135                                           
   136                                               # get video path from video in folder Data, Testiranje
   137         1        248.0    248.0      0.0      video_path = os.path.join(parent_dir, "Data", "Testiranje", "sidewalk_twards.mp4")
   138                                               # video_path = os.path.join(parent_dir, "Data", "Predstavitev", "sidewalk_away_1.mp4")
   139                                           
   140         1          3.0      3.0      0.0      compr_time_array = []
   141                                           
   142                                               # video_path = None
   143                                           
   144         1          5.0      5.0      0.0      if video_path != None:
   145                                                   # Load video
   146         1     189269.0 189269.0      0.2          video = cv2.VideoCapture(video_path)
   147                                           
   148                                                   # Get video properties
   149         1        144.0    144.0      0.0          width = int(video.get(cv2.CAP_PROP_FRAME_WIDTH))
   150         1         14.0     14.0      0.0          height = int(video.get(cv2.CAP_PROP_FRAME_HEIGHT))
   151         1         15.0     15.0      0.0          fps = int(video.get(cv2.CAP_PROP_FPS))
   152                                           
   153                                               else:
   154                                                   video = cv2.VideoCapture(0, cv2.CAP_DSHOW)
   155                                           
   156                                                   video.set(cv2.CAP_PROP_FOURCC, cv2.VideoWriter.fourcc('m', 'j', 'p', 'g'))
   157                                                   video.set(cv2.CAP_PROP_FOURCC, cv2.VideoWriter.fourcc('M', 'J', 'P', 'G'))
   158                                           
   159                                                   width = 1920
   160                                                   height = 1080
   161                                                   fps = 30
   162                                           
   163                                                   video.set(cv2.CAP_PROP_FPS, fps)
   164                                                   video.set(cv2.CAP_PROP_FRAME_WIDTH, width)
   165                                                   video.set(cv2.CAP_PROP_FRAME_HEIGHT, height)
   166                                           
   167                                               # Initialize list for persisting bounding boxes
   168         1          6.0      6.0      0.0      frame_count = 0
   169         1          5.0      5.0      0.0      STOP = False
   170                                           
   171         1         96.0     96.0      0.0      fpsReader = FPS()
   172                                           
   173         1        115.0    115.0      0.0      b = np.frombuffer(ExportQueue, dtype=np.uint8)
   174                                           
   175         1          6.0      6.0      0.0      if not COMPRESS:
   176                                                   b = b.reshape((height, width, 3))
   177                                                   # b = b.reshape((width, height, 3))
   178                                               else:
   179         1         43.0     43.0      0.0          b = b.reshape((360, 640, 2))
   180                                           
   181         2         10.0      5.0      0.0      while not STOP:
   182        20       1245.0     62.2      0.0          while True:
   183        20        121.0      6.0      0.0              try:
   184        20        128.0      6.4      0.0                  start_time = time.time()
   185                                           
   186                                                           # Read frame
   187        20    1233108.0  61655.4      1.1                  ret, frame = video.read()
   188                                           
   189        20        239.0     11.9      0.0                  if not ret:
   190                                                               break
   191                                           
   192        20      16669.0    833.5      0.0                  fpsReader.update(frame, pos=(50, 120), scale=5, thickness=5)
   193                                           
   194                                                           # frame = cv2.transpose(frame)
   195                                                           # frame = cv2.resize(frame, (width, height))
   196                                           
   197        20        469.0     23.4      0.0                  if frame.shape[0] != height or frame.shape[1] != width:
   198                                                               frame = cv2.resize(frame, (width, height))
   199                                           
   200                                           
   201        20        204.0     10.2      0.0                  compr_time_start = time.time()
   202                                                           # Compress frame
   203        20         89.0      4.5      0.0                  if COMPRESS:
   204        20  104361294.0    5e+06     96.5                      frame_compr = Compression(frame, print_bits=False)
   205                                           
   206        20        676.0     33.8      0.0                  compr_time_diff = time.time() - compr_time_start
   207        20        365.0     18.2      0.0                  compr_time_array.append(compr_time_diff)
   208                                           
   209                                                           #frame_compr = Compression(frame, print_bits=False)
   210                                                           #frame = Decompression(frame_compr, print_bits=False)
   211                                           
   212        20        162.0      8.1      0.0                  if lock is not None:
   213                                                               # Save frame to shared memory
   214        20        796.0     39.8      0.0                      if lock.acquire(block=False):
   215        20        259.0     12.9      0.0                          if not COMPRESS:
   216                                                                       b[:] = frame
   217                                                                   else:
   218        20       8624.0    431.2      0.0                              b[:] = frame_compr
   219        20        419.0     20.9      0.0                          lock.release()
   220                                                           else:
   221                                                               if not COMPRESS:
   222                                                                   b[:] = frame
   223                                                               else:
   224                                                                   b[:] = frame_compr
   225                                           
   226                                           
   227        20     353975.0  17698.8      0.3                  cv2.imshow('Video Producer', cv2.resize(frame, (640, 360)))
   228                                                           #cv2.imshow('Video Consumer', cv2.resize(frame, (1280, 720)))
   229                                                           # cv2.imshow('Video Producer', frame)
   230                                           
   231                                                           # Stop loop
   232        20    1766257.0  88312.9      1.6                  if cv2.waitKey(1) & 0xFF == ord('q'):
   233         1          6.0      6.0      0.0                      STOP = True
   234         1          6.0      6.0      0.0                      break
   235                                           
   236        19        459.0     24.2      0.0                  frame_count += 1
   237                                           
   238        19        647.0     34.1      0.0                  diff = time.time() - start_time
   239        19        464.0     24.4      0.0                  if diff < (1 / fps):
   240                                                               #time.sleep(((1 / fps) - diff) * 0.9)
   241                                                               time.sleep(((1 / fps) - diff) * 0.811)
   242                                                               # time.sleep(((1 / fps) - diff))
   243                                           
   244                                                       except KeyboardInterrupt:
   245                                                           STOP = True
   246                                                           break
   247                                           
   248         1      36172.0  36172.0      0.0          video.set(cv2.CAP_PROP_POS_FRAMES, 0)
   249         1         10.0     10.0      0.0          frame_count = 0
   250         1        190.0    190.0      0.0          print("[STREAMER] Restarting video...")
   251                                           
   252                                               # Release resources
   253         1      65862.0  65862.0      0.1      video.release()
   254         1      99540.0  99540.0      0.1      cv2.destroyAllWindows()
   255                                           
   256         1         45.0     45.0      0.0      if len(compr_time_array) > 0:
   257         1        307.0    307.0      0.0          print("Average compression time: ", sum(compr_time_array) / len(compr_time_array))